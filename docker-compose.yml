version: '3'

services:
  app:
    container_name: roulette_service
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - .:/usr/src/app # Mount the current directory to the container
      - /usr/src/app/node_modules # Exclude node_modules from being overwritten
    command: npm run start:dev # Use NestJS watch mode
    networks:
       sprintgames_microservices_sprint-network:
        ipv4_address: 172.20.0.15
networks:
   sprintgames_microservices_sprint-network:
    external: true


# version: '3'

# services:
#   db:
#     image: mongo:5
#     restart: always
#     ports:
#      - 27017:27017
#     environment:
#       MONGODB_DATABASE: dbRuletas
#     volumes:
#       - ./mongo:/data/dbs
#   redis:
#     container_name: cache_roulette
#     image: 'redis:alpine'    
#     ports:
#       - '6379:6379'
#       - '6380:6380'
#     networks:
#       - traefik
#   app:
#     container_name: roulette_service    
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "3000:3000"      
#     volumes:
#       - .:/usr/src/app # Mount the current directory to the container
#       - /usr/src/app/node_modules # Exclude node_modules from being overwritten
#     environment:
#       - NODE_ENV=development
#       - DB_URI=mongodb://admin:Jose2112*@host.docker.internal:27017
#       - REDIS_URI=cache_roulette
#       - REDIS_PORT=6379
#       - PATH_WS=/game/roulette_service
#     labels:
#       - "traefik.enable=true"

#       # 1) El router que atrapa todo /game/.../ws
#       - "traefik.http.routers.gateway-ws.rule=PathPrefix(`/game/roulette_service`)"
#       - "traefik.http.routers.gateway-ws.entrypoints=web"
#       - "traefik.http.routers.gateway-ws.service=ws-backend"

#       # 2) Middleware para reescribir el path hacia socket.io
#       - "traefik.http.middlewares.ws-replacepath.replacepathregex.regex=^/game/roulette_service(.*)"
#       - "traefik.http.middlewares.ws-replacepath.replacepathregex.replacement=/game/roulette_service/socket.io$1"

#       # 3) Middleware para habilitar WebSocket Upgrade
#       - "traefik.http.middlewares.ws-upgrade.headers.customrequestheaders.Upgrade=websocket"
#       - "traefik.http.middlewares.ws-upgrade.headers.customrequestheaders.Connection=Upgrade"

#       # 4) Aplica ambos middlewares en orden
#       - "traefik.http.routers.gateway-ws.middlewares=ws-replacepath,ws-upgrade"

#       # 5) Define al servicio y el puerto interno
#       - "traefik.http.services.ws-backend.loadbalancer.server.port=3000"

#       #HTTP API - Roulette      
#       - "traefik.http.routers.gateway-roulette.rule=PathPrefix(`/game/roulette_service/api`)"
#       - "traefik.http.routers.gateway-roulette.entrypoints=web"
#       - "traefik.http.routers.gateway-roulette.middlewares=roulette-strip-prefix"
#       - "traefik.http.routers.gateway-roulette.service=gateway-roulette-service"
#       - "traefik.http.services.gateway-roulette-service.loadbalancer.server.port=3000"
#       - "traefik.http.middlewares.roulette-strip-prefix.stripprefix.prefixes=/game/roulette_service"
#       - "traefik.http.middlewares.roulette-strip-prefix.stripprefix.forceSlash=false"

#     command: npm run start:dev # Use NestJS watch mode
#     networks:
#       - traefik
# networks:
#   traefik:
#     external: true